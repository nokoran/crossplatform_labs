# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "bento/ubuntu-18.04"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  config.vm.network "forwarded_port", guest: 5000, host: 5002
  config.vm.box_check_update = false
  config.vm.boot_timeout = 0

  config.ssh.insert_key = false
  config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
    vb.gui = true
	
  #   # Customize the amount of memory on the VM:
    vb.memory = "1024"
  end

  config.vm.provision "shell", path: "bootsrap.sh"

  config.vm.provision "shell", path: "startup.sh"
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL

  #config.vm.provision "shell", inline: "sudo mkdir -p /var/baget"

  #config.vm.provision "shell", inline: "sudo apt-get install -y aspnetcore-runtime-3.1"
  #config.vm.provision "shell", inline: "sudo apt-get update"
  #config.vm.provision "shell", inline: "sudo apt-get upgrade"

  #config.vm.provision "shell", inline: "sudo rm -rf /var/baget/src"
  #config.vm.provision "shell", inline: "curl -L -o /tmp/baget.zip https://github.com/loic-sharma/BaGet/archive/refs/tags/v0.4.0-preview2.zip"
  #config.vm.provision "shell", inline: "sudo mkdir -p /var/baget/src"
  #config.vm.provision "shell", inline: "sudo chmod +x /var/baget/src"
  #config.vm.provision "shell", inline: "sudo apt-get install unzip"
  #config.vm.provision "shell", inline: "sudo unzip /tmp/baget.zip -d /var/baget/src"

  # config.vm.provision "shell", path: "./bootsrap.sh"

  #config.vm.provision "shell", inline: "sudo rm -rf /var/baget/app"
  #config.vm.provision "shell", inline: "sudo apt-get install dotnet-runtime-6.0"

  # config.vm.provision "shell", inline: "sudo dotnet build /baget/BaGet-0.4.0-preview2/src/BaGet -c Release -o /var/baget/app"
  # config.vm.provision "shell", inline: "sudo dotnet publish /baget/BaGet-0.4.0-preview2/src/BaGet -c Release -o /var/baget/app"
  #config.vm.provision "shell", inline: "sudo chnod g+w /var/baget/app"
end
